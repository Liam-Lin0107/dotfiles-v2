// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+o",
    "command": "projectManager.listGitProjects#sideBarGit"
  },
  // ------------------- whichkey ----------------
  {
    "key": "shift+space",
    "command": "whichkey.show"
  },

  // ------------------- navigation ----------------
  {
    "key": "ctrl+h",
    "command": "workbench.action.navigateLeft",
    "when": "!inQuickOpen && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.navigateRight",
    "when": "!inQuickOpen && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.navigateUp",
    "when": "!inQuickOpen && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.navigateDown",
    "when": "!inQuickOpen && !suggestWidgetVisible"
  },
  // ------------------------- completion ------------
  {
    "key": "ctrl+p",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },

  // ---------------- selection --------------------
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inFilesPicker && inQuickOpen"
  },

  // ------------------------ editing ------------------
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },

  // ----------------- window ------------------------
  {
    "key": "ctrl+q",
    "command": "workbench.action.closePanel"
  },

  // ----------------- tab (editor) ------------------------
  {
    "key": "alt+h",
    "command": "workbench.action.previousEditorInGroup"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.nextEditorInGroup"
  },

  // ---------------- file system -------------------
  {
    "key": "ctrl+f",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.files.action.focusFilesExplorer",
    "when": "editorTextFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus "
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus "
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && !inputFocus "
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && !inputFocus "
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && !inputFocus "
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && !inputFocus "
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && !inputFocus "
  },
  {
    "key": "v",
    "command": "explorer.openToSide",
    "when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
  },

  // ---------------- Explore ------------------------------------------
  {
    "key": "d",
    "command": "csdevkit.deleteItem",
    "when": "focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'File' || focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'Folder'"
  },
  {
    "key": "r",
    "command": "csdevkit.rename",
    "when": "focusedVied == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'File' || focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'Folder' || focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'Project'"
  },
  {
    "key": "space",
    "command": "-filesExplorer.openFilePreserveFocus",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "key": "space",
    "command": "-breadcrumbs.revealFocused",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "space",
    "command": "-debug.toggleBreakpoint",
    "when": "breakpointsFocused && !inputFocus"
  },
  {
    "key": "space",
    "command": "-list.toggleExpand",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "space",
    "command": "-notification.toggle",
    "when": "notificationFocus"
  },
  {
    "key": "space",
    "command": "-refactorPreview.toggleCheckedState",
    "when": "listFocus && refactorPreview.enabled && !inputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-actions.find",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "ctrl+f",
    "command": "-settings.action.search",
    "when": "inSettingsEditor"
  },
  {
    "key": "ctrl+f",
    "command": "-problems.action.focusFilter",
    "when": "focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "ctrl+f",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "ctrl+f",
    "command": "-keybindings.editor.searchKeybindings",
    "when": "inKeybindings"
  },
  {
    "key": "ctrl+f",
    "command": "-notebook.find",
    "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
  },
  {
    "key": "ctrl+f",
    "command": "-commentsFocusFilter",
    "when": "focusedView == 'workbench.panel.comments'"
  },
  {
    "key": "ctrl+f",
    "command": "-repl.action.filter",
    "when": "inDebugRepl && textInputFocus"
  },
  {
    "key": "ctrl+f",
    "command": "-editor.action.webvieweditor.showFind",
    "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "ctrl+f",
    "command": "-editor.action.extensioneditor.showfind",
    "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+k ctrl+pagedown",
    "command": "-workbench.action.nextEditorInGroup"
  },
  {
    "key": "ctrl+k ctrl+pageup",
    "command": "-workbench.action.previousEditorInGroup"
  },
  {
    "key": "shift+alt+.",
    "command": "-editor.action.autoFix",
    "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
  },
  {
    "key": "ctrl+enter",
    "command": "-explorer.openToSide",
    "when": "explorerViewletFocus && foldersViewVisible && !inputFocus"
  },
  {
    "key": "alt+h",
    "command": "-testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "alt+l",
    "command": "-toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quit"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "ctrl+q",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.q && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+q",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.q && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "f2",
    "command": "-csdevkit.rename",
    "when": "focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'File' || focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'Folder' || focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'Project'"
  },
  {
    "key": "delete",
    "command": "-csdevkit.deleteItem",
    "when": "focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'File' || focusedView == 'solutionExplorer' && selectedSolutionExplorerNodeType == 'Folder'"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-cody.command.edit-code",
    "when": "cody.activated && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+shift+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  }
]
