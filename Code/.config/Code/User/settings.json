{
  // -------------------------- vscode -----------------------------------
  // "workbench.settings.editor": "json",

  // -------------------------- theme ------------------------------------
  "workbench.colorTheme": "One Dark Pro",
  "workbench.iconTheme": "material-icon-theme",

  // -------------------------- fonts ------------------------------------
  "editor.fontFamily": "'Comic Mono','Yozai','CaskaydiaCove Nerd Font'",
  "terminal.integrated.fontFamily": "'Comic Mono', 'CaskaydiaCove Nerd Font'",
  "scm.inputFontFamily": "Geist Mono",
  "chat.editor.fontFamily": "Geist Mono",
  "debug.console.fontFamily": "Geist Mono",
  "editor.codeLensFontFamily": "Geist Mono",
  "markdown.preview.fontFamily": "Geist Mono",
  "notebook.output.fontFamily": "Geist Mono",
  "editor.inlayHints.fontFamily": "Geist Mono",
  "editor.fontSize": 14,
  "terminal.integrated.fontSize": 14,
  "editor.fontLigatures": true,

  // -------------------------- ui ------------------------------------
  "editor.minimap.enabled": false,
  "window.commandCenter": false,
  "editor.scrollbar.vertical": "auto",
  "editor.scrollbar.horizontal": "auto",
  "window.titleBarStyle": "custom",
  "window.dialogStyle": "custom",

  // ---------------------------- APC -------------------------------------
  // "apc.activityBar": {
  //   "position": "bottom",
  //   "hideSettings": true,
  //   "size": 28
  // },
  // "apc.electron": {
  //   "titleBarStyle": "hiddenInset",
  //   "trafficLightPosition": {
  //     "x": 12,
  //     "y": 10
  //   }
  // },
  // "apc.font.family": "Geist Mono",
  // "apc.monospace.font.family": "Geist Mono",
  // "apc.statusBar": {
  //   "position": "editor-bottom",
  //   "height": 28,
  //   "fontSize": 12
  // },
  // "apc.stylesheet": {
  //   ".sidebar > .composite": "height: 12px !important",
  //   ".title-label": "display: none !important",
  //   ".title-actions": "display: none !important",
  //   ".tabs-and-actions-container > .editor-actions": "display: none !important",
  //   ".titlebar-center": "display: none !important",
  //   ".titlebar-right": "display: none !important",
  //   ".inline-tabs-placeholder": "display: none !important",
  //   ".split-view-view .visible": "background-color: #282C34 !important"
  // },

  // ---------------------------- customize theme -------------------------------------
  "workbench.colorCustomizations": {
    "[One Dark Pro]": {
      "editor.background": "#282C34",
      "terminal.background": "#282C34",
      "activityBar.background": "#282C34",
      "statusBar.background": "#282C34",
      "editorGroupHeader.tabsBackground": "#282C34",
      "tab.inactiveBackground": "#282C34"
    }
  },

  // ---------------------------- exclude files -------------------------------------
  "files.exclude": {
    "**/obj": true,
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/CVS": true,
    "**/.DS_Store": true,
    "**/*.js": {
      "when": "$(basename).ts"
    }
    // "**/node_modules": true
  },

  // ---------------------------- Misc -------------------------------------
  "workbench.startupEditor": "none",
  "explorer.compactFolders": false,
  "editor.tabSize": 2,
  "editor.linkedEditing": true,
  "breadcrumbs.filePath": "off",
  "files.trimTrailingWhitespace": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.lineHeight": 22,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.lineNumbers": "relative",
  "editor.stickyScroll.enabled": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": false,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.mouseWheelZoom": true,
  "editor.codeActionsOnSave": {
    "source.addMissingImports": "explicit",
    "source.organizeImports": "explicit"
  },
  "editor.largeFileOptimizations": true,
  "explorer.confirmDelete": false,
  "window.zoomLevel": 0.5,
  "editor.cursorBlinking": "smooth",
  "editor.cursorStyle": "line",
  "editor.smoothScrolling": true,
  "editor.cursorSmoothCaretAnimation": "on",

  // ---------------------------- backedn-end-------------------------------------
  // c#
  "[csharp]": {
    "editor.defaultFormatter": "ms-dotnettools.csharp",
    "editor.tabSize": 4
  },
  "csharp.debug.justMyCode": false,
  "dotnet.preferVisualStudioCodeFileSystemWatcher": true,
  "csharp.inlayHints.enableInlayHintsForImplicitVariableTypes": true,
  "csharp.inlayHints.enableInlayHintsForLambdaParameterTypes": true,
  "csharp.inlayHints.enableInlayHintsForTypes": true,
  "dotnet.inlayHints.enableInlayHintsForLiteralParameters": true,
  "dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": true,
  "dotnet.inlayHints.enableInlayHintsForParameters": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": true,
  "omnisharp.sdkPath": "/home/liam/.local/dotnet/sdk/8.0.100",
  "omnisharp.sdkVersion": "8.0.100",
  "vs-kubernetes": {
    "vs-kubernetes.namespace": "",
    "vs-kubernetes.kubectl-path": "",
    "vs-kubernetes.helm-path": "",
    "vs-kubernetes.minikube-path": "",
    "vs-kubernetes.kubectlVersioning": "user-provided",
    "vs-kubernetes.outputFormat": "yaml",
    "vs-kubernetes.kubeconfig": "",
    "vs-kubernetes.knownKubeconfigs": [],
    "vs-kubernetes.autoCleanupOnDebugTerminate": false,
    "vs-kubernetes.nodejs-autodetect-remote-root": true,
    "vs-kubernetes.nodejs-remote-root": "",
    "vs-kubernetes.nodejs-debug-port": 9229,
    "vs-kubernetes.dotnet-vsdbg-path": "~/vsdbg/vsdbg",
    "vs-kubernetes.local-tunnel-debug-provider": "",
    "checkForMinikubeUpgrade": true,
    "imageBuildTool": "Docker",
    "disable-linters": ["resource-limits"],
    "vscode-kubernetes.helm-path-linux": "/home/liam/.local/state/vs-kubernetes/tools/helm/linux-amd64/helm",
    "vscode-kubernetes.minikube-path-linux": "/home/liam/.local/state/vs-kubernetes/tools/minikube/linux-amd64/minikube"
  },

  // ---------------------------- front-end-------------------------------------
  "typescript.autoClosingTags": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "extensions.autoUpdate": "onlyEnabledExtensions",
  // tailwindcss plugin
  "tailwindCSS.includeLanguages": {
    "plaintext": "html",
    "plaintext": "javascript",
    "plaintext": "javascriptreact",
    "plaintext": "typescriptreact"
  },

  // ---------------------------- tools -------------------------------------
  // this will search recursively for project with .git
  "projectManager.git.baseFolders": ["/home/liam/Workspace"],

  // ---------------------------- Neovim -------------------------------------
  "keyboard.dispatch": "keyCode",
  "vscode-neovim.neovimExecutablePaths.linux": "/usr/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.linux": "/home/liam/.config/nvim-vscode/init.vim",
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "whichkey.sortOrder": "alphabetically",
  "whichkey.delay": 0,
  "whichkey.bindings": [
    {
      "key": "w",
      "name": "Save file",
      "type": "command",
      "command": "workbench.action.files.save"
    },
    {
      "key": "q",
      "name": "Close file",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "?",
      "name": "View All References",
      "type": "command",
      "command": "references-view.find",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "r",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "q",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "s",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "n",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "Toggle Explorer",
      "type": "command",
      "command": "workbench.action.toggleSidebarVisibility"
    },
    {
      "key": "f",
      "name": "Quick Open",
      "type": "command",
      "command": "workbench.action.quickOpen"
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "l",
          "name": "Toggle Line Blame",
          "type": "command",
          "command": "gitlens.toggleLineBlame",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "L",
          "name": "Toggle GitLens",
          "type": "command",
          "command": "gitlens.toggleCodeLens",
          "when": "editorTextFocus && gitlens:canToggleCodeLens && gitlens:enabled && config.gitlens.keymap == 'alternate'"
        }
      ]
    },
    {
      "key": "l",
      "name": "LSP...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "j",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "n",
          "name": "Next Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.toggleVisibility"
        },
        {
          "key": "k",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "p",
          "name": "Prev Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    {
      "key": "m",
      "name": "Mark...",
      "type": "bindings",
      "bindings": [
        {
          "key": "c",
          "name": "Clear Bookmarks",
          "type": "command",
          "command": "bookmarks.clear"
        },
        {
          "key": "j",
          "name": "Next Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToNext",
          "when": "editorTextFocus"
        },
        {
          "key": "k",
          "name": "Previous Bookmark",
          "type": "command",
          "command": "bookmarks.jumpToPrevious",
          "when": "editorTextFocus"
        },
        {
          "key": "l",
          "name": "List Bookmarks",
          "type": "command",
          "command": "bookmarks.listFromAllFiles",
          "when": "editorTextFocus"
        },
        {
          "key": "r",
          "name": "Refresh Bookmarks",
          "type": "command",
          "command": "bookmarks.refresh"
        },
        {
          "key": "t",
          "name": "Toggle Bookmark",
          "type": "command",
          "command": "bookmarks.toggle",
          "when": "editorTextFocus"
        },
        {
          "key": "s",
          "name": "Show Bookmarks",
          "type": "command",
          "command": "workbench.view.extension.bookmarks"
        }
      ]
    },
    {
      "key": "h",
      "name": "No Highlight",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": ":noh<CR>"
    },
    {
      "key": "o",
      "name": "Open...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "workbench.action.files.openFile"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "S",
      "name": "Search...",
      "type": "bindings",
      "bindings": [
        {
          "key": "t",
          "name": "Text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "projectManager.listGitProjects#sideBarGit"
        }
      ]
    },
    {
      "key": "s",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "E",
          "name": "Show explorer",
          "type": "command",
          "command": "solutionExplorer.focus"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "T",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "t",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "u",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": "a",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "b",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "s",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "x",
      "name": "Extensions",
      "type": "command",
      "command": "workbench.view.extensions"
    }
  ],

  // ---------------------------- vim -------------------------------------

  "vim.leader": "<space>",
  "vim.easymotion": true,
  "vim.incsearch": true,
  "vim.statusBarColorControl": false,
  "vim.useSystemClipboard": true,
  "vim.useCtrlKeys": true,
  "vim.hlsearch": true,
  "vim.highlightedyank.enable": true,
  "vim.insertModeKeyBindings": [{}],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "w"],
      "commands": [":w!"]
    },

    {
      "before": ["<leader>", "q"],
      "commands": [":q"]
    },
    {
      "before": ["<leader>", "e"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<leader>", "h"],
      "commands": [":nohl"]
    },
    {
      "before": ["leader", "s", "t"],
      "commands": ["workbench.view.search"]
    },

    // l stands for neovim lsp
    {
      "before": ["<leader>", "k"],
      "commands": ["editor.action.showHover"]
    },
    {
      "before": ["<leader>", "l", "j"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["<leader>", "l", "k"],
      "commands": ["editor.action.marker.prev"]
    },
    {
      "before": ["<leader>", "l", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<leader>", "l", "o"],
      "commands": ["workbench.action.toggleAuxiliaryBar"]
    },
    {
      "before": ["<leader>", "l", "r"],
      "commands": ["editor.action.rename"],
      "when": ["editorHasRenameProvider && editorTextFocus && !editor.Readonly"]
    },

    // d stands for debug
    {
      "before": ["<leader>", "d", "b"],
      "commands": ["editor.debug.action.toggleBreakpoint"]
    },
    {
      "before": ["<leader>", "d", "r"],
      "commands": ["workbench.action.debug.start"]
    },
    {
      "before": ["<leader>", "d", "c"],
      "commands": ["workbench.action.debug.continue"]
    },
    {
      "before": ["<leader>", "d", "s"],
      "commands": ["workbench.action.debug.stepInto"]
    },
    {
      "before": ["<leader>", "d", "n"],
      "commands": ["workbench.action.debug.stepOver"]
    },
    {
      "before": ["<leader>", "d", "o"],
      "commands": ["workbench.action.debug.stepOut"]
    },
    {
      "before": ["<leader>", "d", "q"],
      "commands": ["workbench.action.debug.stop"]
    }
  ],
  "vim.handleKeys": {
    "<C-a>": false,
    "<C-f>": false,
    "<C-p>": false
  },
  "redhat.telemetry.enabled": true
}
