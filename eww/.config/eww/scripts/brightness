#!/usr/bin/env bash
cd ~/.config/eww

icons=("" "" "")
XDG_CACHE_HOME="$HOME/.cache"
date="$XDG_CACHE_HOME/eww/osd_brightness.date"
lock=0

showhide() {
    # get dates
    rundate=$(cat "$date")
    currentdate=$(date +%s)

    # handle showing
    if [ "$rundate" = "$currentdate" ] && [ "$lock" -eq 0 ]; then
        scripts/toggle-osd-bright.sh --open
        lock=1
    elif [ $((currentdate - rundate)) -ge 2 ] && [ "$lock" -eq 1 ]; then
        scripts/toggle-osd-bright.sh --close > /dev/null
        lock=0
    fi
}

osd() {
    if [ ! -f "$date" ]; then
        mkdir -p "$XDG_CACHE_HOME/eww"
    fi
    date +%s > "$date"
    # showhide
}

osd_handler() {
    lock=0
    rundate=0
    if [ ! -f "$date" ]; then
        mkdir -p "$XDG_CACHE_HOME/eww"
        echo 0 > "$date"
    fi

    while true; do
        showhide
        sleep 0.1
    done
}

if [ "$1" = "osd" ]; then
    osd
else
    # initial
    panel_icon=${icons[$(echo $(brightnessctl -d 'apple-panel-bl' i | awk -F "[()%]" '/Current brightness/{result = int($2/42); print result}'))]}
    panel_level=$(brightnessctl -d 'apple-panel-bl' i | awk -F "[()%]" '/Current brightness/{result = $2; print result}')
    kbd_icon=${icons[$(echo $(brightnessctl -d 'kbd_backlight' i | awk -F "[()%]" '/Current brightness/{result = int($2/42); print result}'))]}
    kbd_level=$(brightnessctl -d 'kbd_backlight' i | awk -F "[()%]" '/Current brightness/{result = $2; print result}')
    echo '{ "panel_level": '"$panel_level"', "panel_icon": "'"$panel_icon"'", "kbd_level": '"$kbd_level"', "kbd_icon": "'"$kbd_icon"'" }'

    osd_handler &
    udevadm monitor | rg --line-buffered "backlight" | while read -r _; do
        panel_icon=${icons[$(echo $(brightnessctl -d 'apple-panel-bl' i | awk -F "[()%]" '/Current brightness/{result = int($2/42); print result}'))]}
        panel_level=$(brightnessctl -d 'apple-panel-bl' i | awk -F "[()%]" '/Current brightness/{result = $2; print result}')
        kbd_icon=${icons[$(echo $(brightnessctl -d 'kbd_backlight' i | awk -F "[()%]" '/Current brightness/{result = int($2/42); print result}'))]}
        kbd_level=$(brightnessctl -d 'kbd_backlight' i | awk -F "[()%]" '/Current brightness/{result = $2; print result}')
        echo '{ "panel_level": '"$panel_level"', "panel_icon": "'"$panel_icon"'", "kbd_level": '"$kbd_level"', "kbd_icon": "'"$kbd_icon"'" }'
    done
fi
